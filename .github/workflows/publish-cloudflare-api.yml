name: "Publish Cloudflare API & Logger Worker"

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  deploy:
    name: "Deploy to Cloudflare Workers"
    runs-on: ubuntu-latest
    steps:
      ##########################################################################
      # 1) Check out the repository
      ##########################################################################
      - name: Check out repository
        uses: actions/checkout@v4

      ##########################################################################
      # 2) Deploy the API Worker using Wrangler. If the Worker does not exist,
      #    Wrangler will create it automatically. We also attach the custom
      #    domain using wrangler's "custom-domains create" commandâ€”if it already
      #    exists, the command will fail but we can safely continue.
      ##########################################################################
      - name: Deploy Cloudflare API Worker
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          # Provide these names to wrangler as secrets to bind:
          secrets: |
            SIGNING_KEYS
            CLIENT_IDS
          # We'll set environment variables (wrangler var set) before publishing.
          preCommands: |
            echo "Setting environment variables for the Worker..."
            wrangler var set LOG_LEVEL "$API_LOG_LEVEL"
            wrangler var set AEMO_API_URL "$AEMO_API_URL"
            wrangler var set AEMO_API_HEADERS "$AEMO_API_HEADERS"
            wrangler var set RATE_LIMIT_MAX "$API_RATE_LIMIT_MAX"
            wrangler var set RATE_LIMIT_WINDOW_SEC "$API_RATE_LIMIT_WINDOW_SEC"

            echo "Attempting to attach custom domain..."
            # If it fails because the domain already exists, we'll continue.
            wrangler custom-domains create "api.${CLOUDFLARE_DOMAIN_NAME}" || echo "Domain may already be attached."
          # Publish the Worker (creates it if necessary).
          command: publish
        env:
          # Worker secrets
          SIGNING_KEYS: ${{ secrets.API_SIGNING_KEYS }}
          CLIENT_IDS: ${{ vars.API_CLIENT_IDS }}
          # Configuration variables
          API_LOG_LEVEL: ${{ vars.API_LOG_LEVEL }}
          AEMO_API_URL: ${{ vars.AEMO_API_URL }}
          AEMO_API_HEADERS: ${{ vars.AEMO_API_HEADERS }}
          API_RATE_LIMIT_MAX: ${{ vars.API_RATE_LIMIT_MAX }}
          API_RATE_LIMIT_WINDOW_SEC: ${{ vars.API_RATE_LIMIT_WINDOW_SEC }}
          # Used for domain creation
          CLOUDFLARE_DOMAIN_NAME: ${{ vars.CLOUDFLARE_DOMAIN_NAME }}
          CLOUDFLARE_SERVICE_NAME: ${{ vars.CLOUDFLARE_SERVICE_NAME }}